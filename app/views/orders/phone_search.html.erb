<div class="container my-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header text-center bg-primary text-white">
          <h4><i class="fas fa-search me-2"></i>Tìm kiếm khách hàng</h4>
        </div>
        <div class="card-body">
          <div>
            <div class="mb-3">
              <label for="phone" class="form-label">Số điện thoại khách hàng</label>
              <input type="text" class="form-control form-control-lg" id="phone" name="phone"
                     placeholder="Nhập ít nhất 3 chữ số để tự động tìm...">
            </div>
            <div id="search-result" class="mt-3" style="display: none;">
              <div class="list-group" id="results-list"></div>
              <div id="no-results" class="alert alert-warning mt-2" style="display:none;">Không tìm thấy khách hàng.</div>
            </div>
            <div class="d-grid mt-3">
              <a id="manual-new-order" class="btn btn-outline-primary btn-lg" href="<%= new_order_path %>">
                <i class="fas fa-plus me-2"></i>Tạo đơn mới
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Debounce helper
function debounce(fn, delay) {
  let timer = null;
  return function(...args) {
    clearTimeout(timer);
    timer = setTimeout(() => fn.apply(this, args), delay);
  };
}

const phoneInput = document.getElementById('phone');
const resultsContainer = document.getElementById('search-result');
const resultsList = document.getElementById('results-list');
const noResults = document.getElementById('no-results');
const manualNewOrder = document.getElementById('manual-new-order');

function renderResults(customers) {
  resultsList.innerHTML = '';
  if (customers.length === 0) {
    noResults.style.display = 'block';
    resultsContainer.style.display = 'block';
    return;
  }

  noResults.style.display = 'none';
  resultsContainer.style.display = 'block';

  customers.forEach(c => {
    const a = document.createElement('a');
    a.href = '#';
    a.className = 'list-group-item list-group-item-action d-flex justify-content-between align-items-center';
    a.dataset.phone = c.phone;
    a.innerHTML = `<div><strong>${c.name}</strong><div class="text-muted">${c.phone}</div></div><div class="text-primary">Chọn</div>`;
    a.addEventListener('click', function(e) {
      e.preventDefault();
      // Redirect to new order with selected phone
      window.location.href = '<%= new_order_path %>?phone=' + encodeURIComponent(this.dataset.phone);
    });
    resultsList.appendChild(a);
  });
}

async function doSearch(value) {
  const cleaned = value.replace(/\D/g, '');
  if (cleaned.length < 3) {
    resultsContainer.style.display = 'none';
    return;
  }

  try {
    const resp = await fetch(`<%= search_customer_path %>?phone=` + encodeURIComponent(cleaned), { headers: { 'Accept': 'application/json' } });
    if (!resp.ok) throw new Error('HTTP error ' + resp.status);
    const data = await resp.json();
    renderResults(data.customers || []);
    // update manual new order link to include current number
    manualNewOrder.href = '<%= new_order_path %>?phone=' + encodeURIComponent(cleaned);
  } catch (err) {
    console.error('Search error', err);
  }
}

const debouncedSearch = debounce((e) => doSearch(e.target.value), 800);
phoneInput.addEventListener('input', debouncedSearch);

// Allow pressing Enter to go to new order with current phone
phoneInput.addEventListener('keydown', function(e) {
  if (e.key === 'Enter') {
    e.preventDefault();
    const cleaned = this.value.replace(/\D/g, '');
    window.location.href = '<%= new_order_path %>?phone=' + encodeURIComponent(cleaned);
  }
});
</script>